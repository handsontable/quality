{"id":"xiQS","dependencies":[{"name":"/Users/ndemytruk/Desktop/work/quality/env/parcel/package.json","includedInParent":true,"mtime":1617785714030},{"name":"/Users/ndemytruk/Desktop/work/quality/node_modules/handsontable/package.json","includedInParent":true,"mtime":1612791199119}],"generated":{"js":"\"use strict\";function e(e){var t=new Date(e);return isNaN(new Date(\"\".concat(e,\"T00:00\")).getDate())?t:new Date(t.getTime()+6e4*t.getTimezoneOffset())}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.getNormalizedDate=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/handsontable/es/helpers/date.js","original":{"line":20,"column":1},"generated":{"line":1,"column":0}},{"source":"../../node_modules/handsontable/es/helpers/date.js","original":{"line":11,"column":7},"generated":{"line":1,"column":13}},{"source":"../../node_modules/handsontable/es/helpers/date.js","name":"getNormalizedDate","original":{"line":11,"column":16},"generated":{"line":1,"column":22}},{"source":"../../node_modules/handsontable/es/helpers/date.js","name":"dateString","original":{"line":11,"column":34},"generated":{"line":1,"column":24}},{"source":"../../node_modules/handsontable/es/helpers/date.js","name":"nativeDate","original":{"line":12,"column":6},"generated":{"line":1,"column":27}},{"source":"../../node_modules/handsontable/es/helpers/date.js","name":"nativeDate","original":{"line":12,"column":6},"generated":{"line":1,"column":31}},{"source":"../../node_modules/handsontable/es/helpers/date.js","original":{"line":12,"column":19},"generated":{"line":1,"column":33}},{"source":"../../node_modules/handsontable/es/helpers/date.js","name":"Date","original":{"line":12,"column":23},"generated":{"line":1,"column":37}},{"source":"../../node_modules/handsontable/es/helpers/date.js","name":"dateString","original":{"line":12,"column":28},"generated":{"line":1,"column":42}},{"source":"../../node_modules/handsontable/es/helpers/date.js","original":{"line":14,"column":6},"generated":{"line":1,"column":45}},{"source":"../../node_modules/handsontable/es/helpers/date.js","name":"isNaN","original":{"line":14,"column":7},"generated":{"line":1,"column":52}},{"source":"../../node_modules/handsontable/es/helpers/date.js","original":{"line":14,"column":13},"generated":{"line":1,"column":58}},{"source":"../../node_modules/handsontable/es/helpers/date.js","name":"Date","original":{"line":14,"column":17},"generated":{"line":1,"column":62}},{"source":"../../node_modules/handsontable/es/helpers/date.js","original":{"line":14,"column":22},"generated":{"line":1,"column":67}},{"source":"../../node_modules/handsontable/es/helpers/date.js","name":"concat","original":{"line":14,"column":25},"generated":{"line":1,"column":70}},{"source":"../../node_modules/handsontable/es/helpers/date.js","name":"dateString","original":{"line":14,"column":32},"generated":{"line":1,"column":77}},{"source":"../../node_modules/handsontable/es/helpers/date.js","original":{"line":14,"column":44},"generated":{"line":1,"column":79}},{"source":"../../node_modules/handsontable/es/helpers/date.js","name":"getDate","original":{"line":14,"column":55},"generated":{"line":1,"column":90}},{"source":"../../node_modules/handsontable/es/helpers/date.js","name":"nativeDate","original":{"line":19,"column":9},"generated":{"line":1,"column":101}},{"source":"../../node_modules/handsontable/es/helpers/date.js","original":{"line":16,"column":11},"generated":{"line":1,"column":103}},{"source":"../../node_modules/handsontable/es/helpers/date.js","name":"Date","original":{"line":16,"column":15},"generated":{"line":1,"column":107}},{"source":"../../node_modules/handsontable/es/helpers/date.js","name":"nativeDate","original":{"line":16,"column":20},"generated":{"line":1,"column":112}},{"source":"../../node_modules/handsontable/es/helpers/date.js","name":"getTime","original":{"line":16,"column":31},"generated":{"line":1,"column":114}},{"source":"../../node_modules/handsontable/es/helpers/date.js","original":{"line":16,"column":76},"generated":{"line":1,"column":124}},{"source":"../../node_modules/handsontable/es/helpers/date.js","name":"nativeDate","original":{"line":16,"column":43},"generated":{"line":1,"column":128}},{"source":"../../node_modules/handsontable/es/helpers/date.js","name":"getTimezoneOffset","original":{"line":16,"column":54},"generated":{"line":1,"column":130}},{"source":"../../node_modules/handsontable/es/helpers/date.js","original":{"line":20,"column":1},"generated":{"line":1,"column":151}},{"source":"../../node_modules/handsontable/es/helpers/date.js","original":{"line":20,"column":1},"generated":{"line":1,"column":158}},{"source":"../../node_modules/handsontable/es/helpers/date.js","original":{"line":20,"column":1},"generated":{"line":1,"column":173}},{"source":"../../node_modules/handsontable/es/helpers/date.js","original":{"line":20,"column":1},"generated":{"line":1,"column":181}},{"source":"../../node_modules/handsontable/es/helpers/date.js","original":{"line":20,"column":1},"generated":{"line":1,"column":194}},{"source":"../../node_modules/handsontable/es/helpers/date.js","original":{"line":20,"column":1},"generated":{"line":1,"column":195}},{"source":"../../node_modules/handsontable/es/helpers/date.js","original":{"line":20,"column":1},"generated":{"line":1,"column":202}},{"source":"../../node_modules/handsontable/es/helpers/date.js","original":{"line":20,"column":1},"generated":{"line":1,"column":206}},{"source":"../../node_modules/handsontable/es/helpers/date.js","original":{"line":20,"column":1},"generated":{"line":1,"column":214}},{"source":"../../node_modules/handsontable/es/helpers/date.js","original":{"line":20,"column":1},"generated":{"line":1,"column":232}}],"sources":{"../../node_modules/handsontable/es/helpers/date.js":"/* eslint-disable import/prefer-default-export */\n\n/**\n * Get normalized Date object for the ISO formatted date strings.\n * Natively, the date object parsed from a ISO 8601 string will be offsetted by the timezone difference, which may result in returning a wrong date.\n * See: Github issue #3338.\n *\n * @param {string} dateString String representing the date.\n * @returns {Date} The proper Date object.\n */\nexport function getNormalizedDate(dateString) {\n  var nativeDate = new Date(dateString); // NaN if dateString is not in ISO format\n\n  if (!isNaN(new Date(\"\".concat(dateString, \"T00:00\")).getDate())) {\n    // Compensate timezone offset\n    return new Date(nativeDate.getTime() + nativeDate.getTimezoneOffset() * 60000);\n  }\n\n  return nativeDate;\n}"},"lineCount":null}},"error":null,"hash":"b94a940dbcb5216bb3180f3f048c1115","cacheData":{"env":{}}}